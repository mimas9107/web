doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width,initial-scale=1')
    title CRUD 操作 - 使用者資料
    //  參考之前template.html內的格式 
    style.
      
      #message {
            padding: 15px;
            margin-top: 20px;
            border-radius: 5px;
          }
      
          .success {
            background-color: #d4edda;
            color: #155724;
          }
      
          .error {
            background-color: #f8d7da;
            color: #721c24;
          }
      
  body
    h1 CRUD 操作 - 使用者資料
    //  參考之前template.html內把回覆訊息放到同一頁 
    //  Result Message 
    #message
    //  去除method、action，改成ajax處理 
    //  <form method="POST" action="/users/create"> 
    form#createUser
      h2 Create
      label(for='username') Username:
      input#username(type='text', name='username')
      br
      br
      label(for='email') Email:
      input#email(type='email', name='email')
      br
      br
      label(for='password') Password:
      input#password(type='password', name='password')
      br
      br
      button(type='submit') Create User
    //  去除method、action，改成ajax處理 
    //  <form method="GET" action="/users"> 
    form#getUser
      h2 Read
      label(for='userId') User ID:
      input#userId(type='number', name='id')
      br
      br
      button(type='submit') Get User
    //  去除method、action，改成ajax處理 
    //  <form method="POST" action="/users/update"> 
    form#updateUser
      h2 Update
      label(for='updateId') User ID:
      input#updateId(type='number', name='id')
      br
      br
      label(for='newUsername') New Username:
      input#newUsername(type='text', name='username')
      br
      br
      label(for='newEmail') New Email:
      input#newEmail(type='email', name='email')
      br
      br
      label(for='newPassword') New Password:
      input#newPassword(type='password', name='password')
      br
      br
      button(type='submit') Update User
    //  去除method、action，改成ajax處理 
    //  <form method="POST" action="/users/delete"> 
    form#deleteUser
      h2 Delete
      label(for='deleteId') User ID:
      input#deleteId(type='number', name='id')
      br
      br
      button(type='submit') Delete User
    script.
      
      // 用來發送 AJAX 請求的函數
          function sendRequest(method, url, data, callback) {
            const xhr = new XMLHttpRequest();
            xhr.open(method, url, true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      
            xhr.onreadystatechange = function () {
              if (xhr.readyState === 4 && xhr.status === 200) {
                callback(xhr.responseText);
              }
            };
      
            // 格式化資料為 URL 編碼格式
            let encodedData = '';
            for (let key in data) {
              if (data.hasOwnProperty(key)) {
                encodedData += encodeURIComponent(key) + '=' + encodeURIComponent(data[key]) + '&';
              }
            }
            // 移除最後一個多餘的 '&'
            encodedData = encodedData.slice(0, -1);
      
            xhr.send(encodedData);
          }
      
          // 顯示訊息
          function displayMessage(message, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.innerHTML = message;
            if (type === 'success') {
              messageDiv.className = 'success';
            } else {
              messageDiv.className = 'error';
            }
          }
      
          document.getElementById('createUser').addEventListener('submit', function (e) {
            event.preventDefault();
            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
      
            const data = {
              username: username,
              email: email,
              password: password
            };
      
            // 改成REST Style，根據REST的規則Create對照成HTTP POST
            sendRequest('POST', '/users', data, function (response) {
              const responseData = JSON.parse(response);
              displayMessage(responseData.message, responseData.type);
            });
          });
      
          document.getElementById('getUser').addEventListener('submit', function (e) {
            event.preventDefault();
            const id = document.getElementById('userId').value;
      
            // 改成REST Style，根據REST的規則Read對照成HTTP GET
            sendRequest('GET', '/users?id=' + id, {}, function (response) {
              const responseData = JSON.parse(response);
              displayMessage(responseData.message, responseData.type);
            });
          });
      
          document.getElementById('updateUser').addEventListener('submit', function (e) {
            event.preventDefault();
            const id = document.getElementById('updateId').value;
            const username = document.getElementById('newUsername').value;
            const email = document.getElementById('newEmail').value;
            const password = document.getElementById('newPassword').value;
      
            const data = {
              id: id,
              username: username,
              email: email,
              password: password
            };
      
            // 改成REST Style，根據REST的規則Update對照成HTTP PUT
            sendRequest('PUT', '/users', data, function (response) {
              const responseData = JSON.parse(response);
              displayMessage(responseData.message, responseData.type);
            });
          });
      
          document.getElementById('deleteUser').addEventListener('submit', function (e) {
            event.preventDefault();
            const id = document.getElementById('deleteId').value;
      
            const data = { id: id };
      
            // 改成REST Style，根據REST的規則Delete對照成HTTP DELETE
            sendRequest('DELETE', '/users', data, function (response) {
              const responseData = JSON.parse(response);
              displayMessage(responseData.message, responseData.type);
            });
          });
      
